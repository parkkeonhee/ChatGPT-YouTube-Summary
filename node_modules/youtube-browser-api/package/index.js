new TextEncoder();
const config = { baseUrl: "" };
async function patchFetch(params) {
  const stringify = stringifyQuery(params.query);
  const urlParams = "/" + params.endpoint + (params.slug ? "/" + params.slug : "") + "?" + new URLSearchParams(stringify).toString();
  const url = config.baseUrl + urlParams;
  const promise = params.query.manual ? fetch(url) : fetch(url).then((res) => res.json());
  return promise;
}
function stringifyQuery(query) {
  const copy = structuredClone(query);
  for (const key of Object.keys(copy)) {
    if (typeof copy[key] === "object")
      copy[key] = JSON.stringify(copy[key]);
  }
  return copy;
}
const _GET$3 = async (query) => {
  const promise = patchFetch({
    endpoint: "query",
    query
  });
  return promise;
};
const _GET$2 = async (query) => {
  return patchFetch({
    endpoint: "transcript",
    query
  });
};
const _GET$1 = async (query) => {
  return patchFetch({
    endpoint: "content",
    query
  });
};
const _GET = async (slug, query) => {
  return patchFetch({
    endpoint: "data",
    query,
    slug
  });
};
config.baseUrl = "https://youtube-browser-api.netlify.app";
const index = {
  query: _GET$3,
  transcript: _GET$2,
  content: _GET$1,
  data: _GET
};
export {
  _GET$1 as content,
  _GET as data,
  index as default,
  _GET$3 as query,
  _GET$2 as transcript
};
